[{"/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/index.tsx":"1","/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/App.tsx":"2","/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/redux/actions.ts":"3","/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson3/Lesson3.tsx":"4","/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson3/API.ts":"5","/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson3/lesson_3.ts":"6","/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/redux/currencyReducer.ts":"7","/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson2/lesson2.ts":"8","/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/redux/state.ts":"9","/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson4/lesson_4.ts":"10","/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson4/Lesson4.tsx":"11","/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson5/lesson5.ts":"12","/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson6/lesson6.ts":"13","/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson7/lesson7.ts":"14"},{"size":319,"mtime":1609752860000,"results":"15","hashOfConfig":"16"},{"size":572,"mtime":1621665025432,"results":"17","hashOfConfig":"16"},{"size":1541,"mtime":1617654992316,"results":"18","hashOfConfig":"16"},{"size":1706,"mtime":1619288542140,"results":"19","hashOfConfig":"16"},{"size":440,"mtime":1619287673045,"results":"20","hashOfConfig":"16"},{"size":1126,"mtime":1619418407219,"results":"21","hashOfConfig":"16"},{"size":1304,"mtime":1617651552437,"results":"22","hashOfConfig":"16"},{"size":8521,"mtime":1619680334536,"results":"23","hashOfConfig":"16"},{"size":280,"mtime":1617556480597,"results":"24","hashOfConfig":"16"},{"size":6718,"mtime":1619634065557,"results":"25","hashOfConfig":"16"},{"size":496,"mtime":1619631592930,"results":"26","hashOfConfig":"16"},{"size":8029,"mtime":1620034448394,"results":"27","hashOfConfig":"16"},{"size":11425,"mtime":1621316444266,"results":"28","hashOfConfig":"16"},{"size":2651,"mtime":1621667634355,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"yg8lnl",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/index.tsx",[],["62","63"],"/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/App.tsx",[],"/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/redux/actions.ts",[],"/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson3/Lesson3.tsx",[],"/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson3/API.ts",[],"/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson3/lesson_3.ts",["64","65"],"/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/redux/currencyReducer.ts",[],["66","67"],"/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson2/lesson2.ts",["68"],"/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/redux/state.ts",[],["69","70"],"/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson4/lesson_4.ts",["71","72"],"/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson4/Lesson4.tsx",[],"/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson5/lesson5.ts",["73","74"],"import { count } from 'console'\r\n\r\nconsole.log('Lesson 5')\r\n\r\n// Keyword - this\r\n// https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/this\r\n// https://learn.javascript.ru/object-methods\r\n// https://habr.com/ru/company/ruvds/blog/419371/\r\n// https://www.youtube.com/watch?v=aQkgUUmUJy4&list=PLqKQF2ojwm3l4oPjsB9chrJmlhZ-zOzWT\r\n\r\n// А тут заходим и ставим лайк!!!\r\n// https://www.youtube.com/watch?v=T1vJ8OdJq0o\r\n\r\n// https://www.youtube.com/watch?v=xY-mwUzDjsk\r\n\r\n// Keyword - new. Function-constructor\r\n// https://learn.javascript.ru/constructor-new\r\n// https://metanit.com/web/javascript/4.5.php\r\n// https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/new\r\n\r\n// Call, Apply, Bind\r\n// https://learn.javascript.ru/call-apply-decorators\r\n// https://medium.com/@stasonmars/%D0%BF%D0%BE%D0%B4%D1%80%D0%BE%D0%B1%D0%BD%D0%BE-%D0%BE-%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D0%B0%D1%85-apply-call-%D0%B8-bind-%D0%BD%D0%B5%D0%BE%D0%B1%D1%85%D0%BE%D0%B4%D0%B8%D0%BC%D1%8B%D1%85-%D0%BA%D0%B0%D0%B6%D0%B4%D0%BE%D0%BC%D1%83-javascript-%D1%80%D0%B0%D0%B7%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D1%87%D0%B8%D0%BA%D1%83-ddd5f9b06290\r\n\r\n// Task 01\r\n// Дан объект someObj, реализуйте функцию greeting и присвойте ее ключу объекта с аналогичным именем.\r\n// Функция должна вернуть строку `My name is ${name}. I am ${age}`, где name и age берутся из свойств объекта\r\n\r\n// type someObjType = {\r\n//   name: string\r\n//   age: number\r\n//   greeting: Function\r\n// }\r\n\r\n// let someObj: someObjType = {\r\n//   name: 'Eugene',\r\n//   age: 32,\r\n//   greeting: greeting,\r\n// }\r\n\r\n// function greeting(this: any) {\r\n//   return `My name is ${this.name}. I am ${this.age}`\r\n// }\r\n\r\n// console.log(someObj.greeting())\r\n\r\n// Task 02\r\n// реализовать счетчик counter в виде объекта со следующими методами:\r\n// get current count; - выводит текущее значение счетчика\r\n// increment; - увеличивает значение счетчика на 1\r\n// decrement; - уменьшает значение счетчика на 1\r\n// set current count; - принимает и присваивает значение счетчику\r\n// rest current count - устанавливает значение счетчика равным 0\r\n// все методы должны ссылаться на сам объект\r\n\r\n// type CounterType = {\r\n//   count: number\r\n//   getCurrentCount: () => void\r\n//   increment: () => void\r\n//   decrement: () => void\r\n//   setCurrentCount: Function //(value: number) => void!!!!!!!!\r\n//   restCurrentCount: () => void\r\n// }\r\n\r\n// const counter: CounterType = {\r\n//   count: 0,\r\n//   getCurrentCount() {\r\n//     console.log(this.count)\r\n//   },\r\n//   increment() {\r\n//     this.count++\r\n//     return this\r\n//   },\r\n//   decrement() {\r\n//     this.count--\r\n//     return this\r\n//   },\r\n//   setCurrentCount(value: number) {\r\n//     this.count = value\r\n//     return this\r\n//   },\r\n//   restCurrentCount() {\r\n//     this.count = 0\r\n//     return this\r\n//   },\r\n// }\r\n\r\n// counter.setCurrentCount(10)\r\n// counter.getCurrentCount()\r\n// counter.decrement()\r\n// counter.decrement()\r\n// counter.getCurrentCount()\r\n\r\n// Task 03\r\n// переделайте код из Task 02, что бы сработал следующий код:\r\n// counter\r\n//   .setCurrentCount(10)\r\n//   .increment()\r\n//   .increment()\r\n//   .increment()\r\n//   .decrement()\r\n//   .getCurrentCount() // 12\r\n\r\n// Task 04\r\n// Написать функцию конструктор myFirstConstructorFunc которая принимает 2 параметра name и age и возвращает объект\r\n// у которого будут эти свойства и метод greeting из Task 01\r\n\r\n// class myFirstConstructorFunc {\r\n//   constructor(name: string, age: number) {\r\n//     this.name = name\r\n//     this.age = age\r\n//   }\r\n//   name: string\r\n//   age: number\r\n//   greeting() {\r\n//     return `My name is ${this.name}. I am ${this.age}`\r\n//   }\r\n// }\r\n// const x1 = new myFirstConstructorFunc('Andrey', 33)\r\n// console.log(x1)\r\n// console.log(x1.greeting())\r\n\r\n// Task 05 есть 2 объекта One и Two. С помощью bind и метода sayHello заставьте поздороваться объект One\r\n\r\n// let One = { name: 'One' }\r\n// let Two = {\r\n//   name: 'Two',\r\n//   sayHello: function () {\r\n//     console.log(`Hello, my name is ${this.name}`)\r\n//   },\r\n// }\r\n\r\n// Two.sayHello.bind(One)()\r\n\r\n// Task 06\r\n// создайте объект helperObj у которого есть следующие методы:\r\n// changeName - меняет значение у свойства name объекта на полученное значение\r\n// setAge - устанавливает полученное значение в свойство age объекта\r\n// greeting - используется функция sayHello из Task 05\r\n// можно использовать @ts-ignore\r\n\r\n//@ts-ignore\r\n// const helperObj = {\r\n//   name: '',\r\n//   age: 0,\r\n//   changeName(newName: string) {\r\n//     this.name = newName\r\n//   },\r\n//   setAge(newAge: number) {\r\n//     this.age = newAge\r\n//   },\r\n//   greeting() {\r\n//     return `My name is ${this.name}. I am ${this.age}`\r\n//   },\r\n// }\r\n// helperObj.changeName('Andrey')\r\n// helperObj.setAge(33)\r\n// console.log(helperObj.greeting())\r\n\r\n// Bind\r\n// 1) Дана функция sumTwoNumbers, реализовать функцию bindNumber которая принимает функцию sumTwoNumbers и число, и\r\n// // возвращает другую функцию, которое также принимает число и возвращает сумму этих чисел. Замыкание использовать нельзя\r\n// function sumTwoNumbers(a: number, b: number): number {\r\n//   return a + b\r\n// }\r\n\r\n// function bindNumber(fn: Function, n: number) {\r\n//   return fn.bind(null, n)\r\n// }\r\n\r\n// console.log(bindNumber(sumTwoNumbers, 3)(10))\r\n\r\n// let obj = {\r\n//   _a: 0,\r\n//   get a() {\r\n//     return this._a++\r\n//   },\r\n// }\r\n\r\n// function c() {\r\n//   debugger\r\n//   //@ts-ignore\r\n//   if (obj.a === 1 && obj.a === 2 && obj.a === 3) {\r\n//     console.log('it is work!')\r\n//   }\r\n// }\r\n// c()\r\n\r\n// 2) Напишите функцию которая принимает первым аргументом объект One, а вторым helperObj. Данная функция\r\n// возвращает другую функцию которая принимает строку в качестве аргумента и устанавливает ее свойству name объекта One\r\n\r\n// let One = { name: 'One' }\r\n// let Two = {\r\n//   name: 'Two',\r\n//   sayHello: function () {\r\n//     console.log(`Hello, my name is ${this.name}`)\r\n//   },\r\n// }\r\n\r\n// const helperObj = {\r\n//   name: '',\r\n//   age: 0,\r\n//   changeName(newName: string) {\r\n//     this.name = newName\r\n//   },\r\n//   setAge(newAge: number) {\r\n//     this.age = newAge\r\n//   },\r\n//   greeting() {\r\n//     return `My name is ${this.name}. I am ${this.age}`\r\n//   },\r\n// }\r\n// function x(obj1: any, obj2: any) {\r\n//   return function (str: string) {\r\n//     obj1.name = str\r\n//     console.log(obj1)\r\n//   }\r\n// }\r\n// x(One, helperObj)('abc')\r\n\r\n// 3) Одной строкой установить с помощью helperObj объекту Two поле age в значение 30\r\n// helperObj.setAge(30)\r\n// console.log(helperObj)\r\n\r\n// 4) Создать метод hi у объекта One, который всегда вызывает метод greeting объекта helperObj от имени Two\r\n//@ts-ignore\r\n// One.hi = helperObj.greeting.bind(Two)\r\n//@ts-ignore\r\n// console.log(One.hi())\r\n\r\n// Реализовать задачи 2-4 из Bind с помощью Call\r\n\r\n// just a plug\r\nexport default () => {}\r\n","/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson6/lesson6.ts",["75","76"],"/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson7/lesson7.ts",["77"],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":19,"column":7,"nodeType":"84","messageId":"85","endLine":19,"endColumn":15},{"ruleId":"86","severity":1,"message":"87","line":38,"column":1,"nodeType":"88","endLine":38,"endColumn":24},{"ruleId":"78","replacedBy":"89"},{"ruleId":"80","replacedBy":"90"},{"ruleId":"86","severity":1,"message":"87","line":244,"column":1,"nodeType":"88","endLine":244,"endColumn":24},{"ruleId":"78","replacedBy":"91"},{"ruleId":"80","replacedBy":"92"},{"ruleId":"82","severity":1,"message":"93","line":1,"column":10,"nodeType":"84","messageId":"85","endLine":1,"endColumn":16},{"ruleId":"86","severity":1,"message":"87","line":158,"column":1,"nodeType":"88","endLine":158,"endColumn":24},{"ruleId":"82","severity":1,"message":"94","line":1,"column":10,"nodeType":"84","messageId":"85","endLine":1,"endColumn":15},{"ruleId":"86","severity":1,"message":"87","line":234,"column":1,"nodeType":"88","endLine":234,"endColumn":24},{"ruleId":"82","severity":1,"message":"95","line":336,"column":5,"nodeType":"84","messageId":"85","endLine":336,"endColumn":8},{"ruleId":"86","severity":1,"message":"87","line":340,"column":1,"nodeType":"88","endLine":340,"endColumn":24},{"ruleId":"86","severity":1,"message":"87","line":75,"column":1,"nodeType":"88","endLine":75,"endColumn":24},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"@typescript-eslint/no-unused-vars","'instance' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["96"],["97"],["96"],["97"],"'useRef' is defined but never used.","'count' is defined but never used.","'zil' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]