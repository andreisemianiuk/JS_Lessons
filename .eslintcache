[{"/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/index.tsx":"1","/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/App.tsx":"2","/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/redux/actions.ts":"3","/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson3/Lesson3.tsx":"4","/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson3/API.ts":"5","/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson3/lesson_3.ts":"6","/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/redux/currencyReducer.ts":"7","/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson2/lesson2.ts":"8","/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/redux/state.ts":"9","/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson4/lesson_4.ts":"10","/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson4/Lesson4.tsx":"11","/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson5/lesson5.ts":"12","/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson6/lesson6.ts":"13"},{"size":319,"mtime":1609752860000,"results":"14","hashOfConfig":"15"},{"size":572,"mtime":1619680644343,"results":"16","hashOfConfig":"15"},{"size":1541,"mtime":1617654992316,"results":"17","hashOfConfig":"15"},{"size":1706,"mtime":1619288542140,"results":"18","hashOfConfig":"15"},{"size":440,"mtime":1619287673045,"results":"19","hashOfConfig":"15"},{"size":1126,"mtime":1619418407219,"results":"20","hashOfConfig":"15"},{"size":1304,"mtime":1617651552437,"results":"21","hashOfConfig":"15"},{"size":8521,"mtime":1619680334536,"results":"22","hashOfConfig":"15"},{"size":280,"mtime":1617556480597,"results":"23","hashOfConfig":"15"},{"size":6718,"mtime":1619634065557,"results":"24","hashOfConfig":"15"},{"size":496,"mtime":1619631592930,"results":"25","hashOfConfig":"15"},{"size":8029,"mtime":1620034448394,"results":"26","hashOfConfig":"15"},{"size":4889,"mtime":1620936054595,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"yg8lnl",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},"/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/index.tsx",[],["59","60"],"/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/App.tsx",[],["61","62"],"/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/redux/actions.ts",[],"/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson3/Lesson3.tsx",[],"/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson3/API.ts",[],"/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson3/lesson_3.ts",["63","64"],"/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/redux/currencyReducer.ts",[],"/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson2/lesson2.ts",["65"],"/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/redux/state.ts",[],["66","67"],"/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson4/lesson_4.ts",["68","69"],"/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson4/Lesson4.tsx",[],"/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson5/lesson5.ts",["70","71"],"import { count } from 'console'\r\n\r\nconsole.log('Lesson 5')\r\n\r\n// Keyword - this\r\n// https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/this\r\n// https://learn.javascript.ru/object-methods\r\n// https://habr.com/ru/company/ruvds/blog/419371/\r\n// https://www.youtube.com/watch?v=aQkgUUmUJy4&list=PLqKQF2ojwm3l4oPjsB9chrJmlhZ-zOzWT\r\n\r\n// А тут заходим и ставим лайк!!!\r\n// https://www.youtube.com/watch?v=T1vJ8OdJq0o\r\n\r\n// https://www.youtube.com/watch?v=xY-mwUzDjsk\r\n\r\n// Keyword - new. Function-constructor\r\n// https://learn.javascript.ru/constructor-new\r\n// https://metanit.com/web/javascript/4.5.php\r\n// https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/new\r\n\r\n// Call, Apply, Bind\r\n// https://learn.javascript.ru/call-apply-decorators\r\n// https://medium.com/@stasonmars/%D0%BF%D0%BE%D0%B4%D1%80%D0%BE%D0%B1%D0%BD%D0%BE-%D0%BE-%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D0%B0%D1%85-apply-call-%D0%B8-bind-%D0%BD%D0%B5%D0%BE%D0%B1%D1%85%D0%BE%D0%B4%D0%B8%D0%BC%D1%8B%D1%85-%D0%BA%D0%B0%D0%B6%D0%B4%D0%BE%D0%BC%D1%83-javascript-%D1%80%D0%B0%D0%B7%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D1%87%D0%B8%D0%BA%D1%83-ddd5f9b06290\r\n\r\n// Task 01\r\n// Дан объект someObj, реализуйте функцию greeting и присвойте ее ключу объекта с аналогичным именем.\r\n// Функция должна вернуть строку `My name is ${name}. I am ${age}`, где name и age берутся из свойств объекта\r\n\r\n// type someObjType = {\r\n//   name: string\r\n//   age: number\r\n//   greeting: Function\r\n// }\r\n\r\n// let someObj: someObjType = {\r\n//   name: 'Eugene',\r\n//   age: 32,\r\n//   greeting: greeting,\r\n// }\r\n\r\n// function greeting(this: any) {\r\n//   return `My name is ${this.name}. I am ${this.age}`\r\n// }\r\n\r\n// console.log(someObj.greeting())\r\n\r\n// Task 02\r\n// реализовать счетчик counter в виде объекта со следующими методами:\r\n// get current count; - выводит текущее значение счетчика\r\n// increment; - увеличивает значение счетчика на 1\r\n// decrement; - уменьшает значение счетчика на 1\r\n// set current count; - принимает и присваивает значение счетчику\r\n// rest current count - устанавливает значение счетчика равным 0\r\n// все методы должны ссылаться на сам объект\r\n\r\n// type CounterType = {\r\n//   count: number\r\n//   getCurrentCount: () => void\r\n//   increment: () => void\r\n//   decrement: () => void\r\n//   setCurrentCount: Function //(value: number) => void!!!!!!!!\r\n//   restCurrentCount: () => void\r\n// }\r\n\r\n// const counter: CounterType = {\r\n//   count: 0,\r\n//   getCurrentCount() {\r\n//     console.log(this.count)\r\n//   },\r\n//   increment() {\r\n//     this.count++\r\n//     return this\r\n//   },\r\n//   decrement() {\r\n//     this.count--\r\n//     return this\r\n//   },\r\n//   setCurrentCount(value: number) {\r\n//     this.count = value\r\n//     return this\r\n//   },\r\n//   restCurrentCount() {\r\n//     this.count = 0\r\n//     return this\r\n//   },\r\n// }\r\n\r\n// counter.setCurrentCount(10)\r\n// counter.getCurrentCount()\r\n// counter.decrement()\r\n// counter.decrement()\r\n// counter.getCurrentCount()\r\n\r\n// Task 03\r\n// переделайте код из Task 02, что бы сработал следующий код:\r\n// counter\r\n//   .setCurrentCount(10)\r\n//   .increment()\r\n//   .increment()\r\n//   .increment()\r\n//   .decrement()\r\n//   .getCurrentCount() // 12\r\n\r\n// Task 04\r\n// Написать функцию конструктор myFirstConstructorFunc которая принимает 2 параметра name и age и возвращает объект\r\n// у которого будут эти свойства и метод greeting из Task 01\r\n\r\n// class myFirstConstructorFunc {\r\n//   constructor(name: string, age: number) {\r\n//     this.name = name\r\n//     this.age = age\r\n//   }\r\n//   name: string\r\n//   age: number\r\n//   greeting() {\r\n//     return `My name is ${this.name}. I am ${this.age}`\r\n//   }\r\n// }\r\n// const x1 = new myFirstConstructorFunc('Andrey', 33)\r\n// console.log(x1)\r\n// console.log(x1.greeting())\r\n\r\n// Task 05 есть 2 объекта One и Two. С помощью bind и метода sayHello заставьте поздороваться объект One\r\n\r\n// let One = { name: 'One' }\r\n// let Two = {\r\n//   name: 'Two',\r\n//   sayHello: function () {\r\n//     console.log(`Hello, my name is ${this.name}`)\r\n//   },\r\n// }\r\n\r\n// Two.sayHello.bind(One)()\r\n\r\n// Task 06\r\n// создайте объект helperObj у которого есть следующие методы:\r\n// changeName - меняет значение у свойства name объекта на полученное значение\r\n// setAge - устанавливает полученное значение в свойство age объекта\r\n// greeting - используется функция sayHello из Task 05\r\n// можно использовать @ts-ignore\r\n\r\n//@ts-ignore\r\n// const helperObj = {\r\n//   name: '',\r\n//   age: 0,\r\n//   changeName(newName: string) {\r\n//     this.name = newName\r\n//   },\r\n//   setAge(newAge: number) {\r\n//     this.age = newAge\r\n//   },\r\n//   greeting() {\r\n//     return `My name is ${this.name}. I am ${this.age}`\r\n//   },\r\n// }\r\n// helperObj.changeName('Andrey')\r\n// helperObj.setAge(33)\r\n// console.log(helperObj.greeting())\r\n\r\n// Bind\r\n// 1) Дана функция sumTwoNumbers, реализовать функцию bindNumber которая принимает функцию sumTwoNumbers и число, и\r\n// // возвращает другую функцию, которое также принимает число и возвращает сумму этих чисел. Замыкание использовать нельзя\r\n// function sumTwoNumbers(a: number, b: number): number {\r\n//   return a + b\r\n// }\r\n\r\n// function bindNumber(fn: Function, n: number) {\r\n//   return fn.bind(null, n)\r\n// }\r\n\r\n// console.log(bindNumber(sumTwoNumbers, 3)(10))\r\n\r\n// let obj = {\r\n//   _a: 0,\r\n//   get a() {\r\n//     return this._a++\r\n//   },\r\n// }\r\n\r\n// function c() {\r\n//   debugger\r\n//   //@ts-ignore\r\n//   if (obj.a === 1 && obj.a === 2 && obj.a === 3) {\r\n//     console.log('it is work!')\r\n//   }\r\n// }\r\n// c()\r\n\r\n// 2) Напишите функцию которая принимает первым аргументом объект One, а вторым helperObj. Данная функция\r\n// возвращает другую функцию которая принимает строку в качестве аргумента и устанавливает ее свойству name объекта One\r\n\r\n// let One = { name: 'One' }\r\n// let Two = {\r\n//   name: 'Two',\r\n//   sayHello: function () {\r\n//     console.log(`Hello, my name is ${this.name}`)\r\n//   },\r\n// }\r\n\r\n// const helperObj = {\r\n//   name: '',\r\n//   age: 0,\r\n//   changeName(newName: string) {\r\n//     this.name = newName\r\n//   },\r\n//   setAge(newAge: number) {\r\n//     this.age = newAge\r\n//   },\r\n//   greeting() {\r\n//     return `My name is ${this.name}. I am ${this.age}`\r\n//   },\r\n// }\r\n// function x(obj1: any, obj2: any) {\r\n//   return function (str: string) {\r\n//     obj1.name = str\r\n//     console.log(obj1)\r\n//   }\r\n// }\r\n// x(One, helperObj)('abc')\r\n\r\n// 3) Одной строкой установить с помощью helperObj объекту Two поле age в значение 30\r\n// helperObj.setAge(30)\r\n// console.log(helperObj)\r\n\r\n// 4) Создать метод hi у объекта One, который всегда вызывает метод greeting объекта helperObj от имени Two\r\n//@ts-ignore\r\n// One.hi = helperObj.greeting.bind(Two)\r\n//@ts-ignore\r\n// console.log(One.hi())\r\n\r\n// Реализовать задачи 2-4 из Bind с помощью Call\r\n\r\n// just a plug\r\nexport default () => {}\r\n","/mnt/e/reactProjects/typescript-projects/JS_Lessons/src/lessons/lesson6/lesson6.ts",["72"],"console.log('Lesson 6')\r\n\r\n// Class\r\n// https://learn.javascript.ru/classes\r\n// https://medium.com/front-stories/%D0%BA%D0%B0%D0%BA-%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D1%8E%D1%82-%D0%BA%D0%BB%D0%B0%D1%81%D1%81%D1%8B-%D0%B2-javascript-7978c0003f1d\r\n// https://www.typescriptlang.org/docs/handbook/classes.html\r\n// https://www.youtube.com/watch?v=BASquaxab_w\r\n// https://www.youtube.com/watch?v=uLY9GXGMXaA\r\n\r\n// Task 01\r\n// Создайте структуру с именем student, содержащую поля: имя и фамилия, номер группы, успеваемость (массив из пяти элементов).\r\n\r\nclass Student {\r\n  name: string\r\n  lastName: string\r\n  academicPerformance: number[]\r\n  constructor(name: string, lastName: string, academicPerformance: number[]) {\r\n    this.name = name\r\n    this.lastName = lastName\r\n    this.academicPerformance = academicPerformance\r\n  }\r\n}\r\n\r\nlet student1 = new Student('Andrey', 'Semenyuk', [10, 10, 10, 10, 10])\r\nlet student2 = new Student('Ihar', 'Luschchyk', [9, 10, 9, 10, 9])\r\nlet student3 = new Student('Vika', 'Kushnerevich', [8, 10, 7, 10, 9])\r\nlet student4 = new Student('Evgen', 'Ivanuyk', [8, 7, 9, 8, 8])\r\nlet student5 = new Student('Ilya', 'Kim', [4, 5, 7, 8, 9])\r\nlet student6 = new Student('Egor', 'Krid', [3, 3, 4, 4, 5])\r\nlet student7 = new Student('Vasya', 'Vakulenko', [3, 4, 8, 8, 7])\r\nlet student8 = new Student('Sergey', 'Shnurov', [2, 1, 3, 3, 2])\r\nlet student9 = new Student('Oleg', 'Mayami', [1, 2, 1, 2, 3])\r\nlet student10 = new Student('Viktor', 'Drobysh', [2, 3, 5, 3, 8])\r\n\r\nlet students = [\r\n  student1,\r\n  student2,\r\n  student3,\r\n  student4,\r\n  student5,\r\n  student6,\r\n  student7,\r\n  student8,\r\n  student9,\r\n  student10,\r\n]\r\n\r\nlet mostEducatedStudents = [\r\n  ...students.sort(\r\n    (a, b) =>\r\n      a.academicPerformance.reduce((acc, v) => acc + v) -\r\n      b.academicPerformance.reduce((acc, v) => acc + v)\r\n  ),\r\n]\r\n\r\nconsole.log(students)\r\nconsole.log(mostEducatedStudents)\r\n\r\n// Создать массив из десяти элементов такого типа, упорядочить записи по возрастанию среднего балла.\r\n// Добавить возможность вывода фамилий и номеров групп студентов, имеющих оценки, равные только 4 или 5.\r\n\r\n// Task 02\r\n// Создать класс с двумя переменными. Добавить конструктор с входными параметрами и инициализирующий члены класса по умолчанию.\r\n// Можно ли создать метод на экземпляре класса который будет удалять сам экземпляр класса?\r\n// Можно ли создать метод класса который будет удалять экземпляр класса?\r\n\r\n// Task 03\r\n// Составить описание класса для представления времени. Предусмотреть возможности установки времени и изменения его отдельных\r\n// полей (час, минута, секунда) с проверкой допустимости вводимых значений. В случае недопустимых значений полей выбрасываются исключения.\r\n// Создать методы изменения времени на заданное количество часов, минут и секунд.\r\n// Создать метод выводящий время в строке формата HH:MM:SS\r\n// Создать класс по вышеуказанному описанию\r\n\r\n// Task 04\r\n// Класс Покупатель: Фамилия, Имя, Адрес, Номер банковского счета;\r\n// Методы: установка значений атрибутов, получение значений атрибутов, вывод информации.\r\n// Создать массив объектов данного класса.\r\n// Вывести список покупателей в алфавитном порядке и список покупателей, у которых номер кредитной карточки находится в заданном диапазоне.\r\n\r\n// Task 05\r\n// Создать класс машина - имеющий марку, число цилиндров, мощность. Определить конструктор и функцию печати.\r\n// Создать производный класс – грузовик, имеющий грузоподъемность кузова.\r\n// Определить функции переназначения марки и грузоподъемности.\r\n\r\n// just a plug\r\nexport default () => {}\r\n",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"73","replacedBy":"77"},{"ruleId":"75","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":19,"column":7,"nodeType":"81","messageId":"82","endLine":19,"endColumn":15},{"ruleId":"83","severity":1,"message":"84","line":38,"column":1,"nodeType":"85","endLine":38,"endColumn":24},{"ruleId":"83","severity":1,"message":"84","line":244,"column":1,"nodeType":"85","endLine":244,"endColumn":24},{"ruleId":"73","replacedBy":"86"},{"ruleId":"75","replacedBy":"87"},{"ruleId":"79","severity":1,"message":"88","line":1,"column":10,"nodeType":"81","messageId":"82","endLine":1,"endColumn":16},{"ruleId":"83","severity":1,"message":"84","line":158,"column":1,"nodeType":"85","endLine":158,"endColumn":24},{"ruleId":"79","severity":1,"message":"89","line":1,"column":10,"nodeType":"81","messageId":"82","endLine":1,"endColumn":15},{"ruleId":"83","severity":1,"message":"84","line":234,"column":1,"nodeType":"85","endLine":234,"endColumn":24},{"ruleId":"83","severity":1,"message":"84","line":86,"column":1,"nodeType":"85","endLine":86,"endColumn":24},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],["90"],["91"],"@typescript-eslint/no-unused-vars","'instance' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["90"],["91"],"'useRef' is defined but never used.","'count' is defined but never used.","no-global-assign","no-unsafe-negation"]